openapi: 3.0.2
info:
  title: "Laravel Project APIs"
  version: "0.1"
  contact:
    name: "Laravel Project"
    url: "Laravel Project URL"
servers:
  - url: "http://localhost/api"
    description: "Local"

paths:
  "/users":
    get:
      tags:
        - user
      summary: "Get users"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "Users"
          content:
            "application/json":
              schema:
                type: object
                required:
                  - users
                properties:
                  users:
                    title: "Users"
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      tags:
        - user
      summary: "Create user"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserModel"
      responses:
        "200":
          description: "User"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/User"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/ValidationError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  "/users/login":
    post:
      tags:
        - user
      summary: "Login user"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserModel"
      responses:
        "200":
          description: "User"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  "/push-notification/token":
    post:
      tags:
        - push-notification
      summary: "add notification token"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PushNotificationModel"
      responses:
        "200":
          description: "User"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PushNotification"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserId:
      type: object
      properties:
        id:
          title: "User ID"
          type: integer
          example: 1
    UserModel:
      type: object
      properties:
        email:
          title: "Email address"
          type: string
          example: "user@example.com"
        password:
          title: "Password"
          type: string
          example: "password"
        name:
          title: "Name"
          type: string
          example: "John Doe"
    User:
      description: "User"
      allOf:
        - $ref: "#/components/schemas/UserId"
        - $ref: "#/components/schemas/UserModel"
    PushNotificationId:
      type: object
      properties:
        id:
          title: "PushNotification ID"
          type: integer
          example: 1
    PushNotificationModel:
      type: object
      properties:
        token:
          title: "PushNotification Token"
          type: string
          example: "xxxxxx:xxxxxxxxxx"
    PushNotification:
      description: "PushNotification"
      allOf:
        - $ref: "#/components/schemas/PushNotificationId"
        - $ref: "#/components/schemas/PushNotificationModel"

  responses:
    NoContent:
      description: "204"
    Unauthorized:
      description: "401"
      content:
        "application/json":
          schema:
            description: "Error"
            type: object
            required:
              - message
            properties:
              message:
                title: "Error message"
                type: string
                example: "Unauthorized"
    Forbidden:
      description: "403"
      content:
        "application/json":
          schema:
            description: "Error"
            type: object
            required:
              - message
            properties:
              message:
                title: "Error message"
                type: string
                example: "Forbidden"
    NotFound:
      description: "404"
      content:
        "application/json":
          schema:
            description: "Error"
            type: object
            required:
              - message
            properties:
              message:
                title: "Error message"
                type: string
                example: "NotFound"
    ValidationError:
      description: "422"
      content:
        "application/json":
          schema:
            description: "Error"
            type: object
            required:
              - message
            properties:
              message:
                title: "Error message"
                type: string
                example: "ValidationError"
    InternalServerError:
      description: "500"
      content:
        "application/json":
          schema:
            description: "Error"
            type: object
            required:
              - message
            properties:
              message:
                title: "Error message"
                type: string
                example: "InternalServerError"

tags:
  - name: user
    description: "API for User"
